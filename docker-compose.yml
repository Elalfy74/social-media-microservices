version: '2'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:3'
    ports:
      - '9092:9092'
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    restart: on-failure
  init-kafka:
    image: 'bitnami/kafka:3'
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      '
      # blocks until kafka is reachable
      kafka-topics.sh --bootstrap-server kafka:9092 --list
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic post.created.topic  --replication-factor 1 --partitions 2
      
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic like.created.topic  --replication-factor 1 --partitions 2 
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic like.removed.topic  --replication-factor 1 --partitions 2
      
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic comment.created.topic  --replication-factor 1 --partitions 2
      echo -e 'Created kafka topics:'
      kafka-topics.sh --bootstrap-server kafka:9092 --list
      '
  auth-db:
    image: postgres:13
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: auth
  auth:
    image: mssocialmedia/auth
    command: sh -c " npx prisma migrate deploy && npx prisma generate && yarn start:dev "
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: postgresql://postgres:123@auth-db:5432/auth?schema=public
      FRONTEND_URL: http://localhost:5173
      PORT: 3000
      SESSION_KEY: RANDOM_KKKKEY
    depends_on:
      - auth-db

  posts-db:
    image: postgres:13
    ports:
      - 5435:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: posts
  posts:
    image: mssocialmedia/posts
    command: sh -c " npx prisma migrate deploy && npx prisma generate && yarn start:dev "
    ports:
      - 3001:3001
    environment:
      DATABASE_URL: postgresql://postgres:123@posts-db:5432/posts?schema=public
      BROKER_URL: kafka:9092
      FRONTEND_URL: http://localhost:5173
      PORT: 3001
      SESSION_KEY: RANDOM_KKKKEY
      REGION: eu-central-1
      ACCESS_KEY_ID: AKIAY4XTOBDMF5EPQ2JO
      SECRET_ACCESS_KEY: 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
      BUCKET_NAME: testingthesaga

    depends_on:
      - posts-db
      - kafka
      - init-kafka

  likes-comments-db:
    image: postgres:13
    ports:
      - 5436:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: likes-comments

  likes-comments:
    image: mssocialmedia/likes-comments
    command: sh -c " npx prisma migrate deploy && npx prisma generate && yarn start:dev "
    ports:
      - 3002:3002
    environment:
      DATABASE_URL: postgresql://postgres:123@likes-comments-db:5432/likes-comments?schema=public
      BROKER_URL: kafka:9092
      FRONTEND_URL: http://localhost:5173
      PORT: 3002
      SESSION_KEY: RANDOM_KKKKEY
    depends_on:
      - likes-comments-db
      - kafka
      - init-kafka
  nginx: 
    ports:
      - "8070:80"
    image: mohamedbedier/msnginx:v1
    depends_on:
      - auth
      - posts
      - likes-comments

  client:
      image: mohamedbedier/nginxfornt:v1
      #command: sh -c "yarn dev --host"
      ports:
        - 5173:80
      environment:
        VITE_BACKEND_URL: http://localhost:8070/api/
      depends_on:
        - nginx